name: "tagged-release"

on:
  push:
    tags:
      - "v*"
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    outputs:
      artifacts: ${{ steps.set_output.outputs.artifact_names }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Build
        run: |
          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}
          go build -o test-${{ matrix.goos }}-${{ matrix.goarch }} -v ./...
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - uses: actions/upload-artifact@v2
        with:
          name: test-${{ matrix.goos }}-${{ matrix.goarch }}
          path: test-${{ matrix.goos }}-${{ matrix.goarch }}
      - name: Set Output
        id: set_output
        run: echo "::set-output name=artifact_names::test-${{ matrix.goos }}-${{ matrix.goarch }}"

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        run: |
          IFS=',' read -ra ARTIFACTS <<< "${{ needs.build.outputs.artifacts }}"
          for artifact in "${ARTIFACTS[@]}"; do
            echo "Uploading $artifact"
            gh release upload ${{ github.ref }} artifacts/$artifact --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
